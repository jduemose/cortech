[project]
name = "cortech"
authors = [
    {name = "Jesper Duemose Nielsen", email = "jesperdn@drcmr.dk" },
    {name = "Oula Puonti", email = "oulap@drcmr.dk" },
]
maintainers = [
  {name = "Cortech developers"},
]
license = {text = "GPL3"}
description = "Cortical layer placement and analysis"
# long_description = file: README.md
# long_description_content_type = text/markdown
dynamic = ["version"]
# version=open("simnibs/_version.py").readlines()[-1].split()[-1].strip("\"'"),
#version = v4.1
requires-python = ">=3.11"

dependencies =[
    "nibabel",
    "numba",
    "numpy",
    "pyvista",
    "scipy",
]

# [project.urls]  # Optional
# "Homepage" = "simnibs.org"
# "Bug Reports" = "https://github.com/simnibs/simnibs/issues"
# "Source" = "https://github.com/simnibs/simnibs/"

[build-system]
build-backend = "mesonpy"
requires = [
    "meson-python >= 0.15.0",
    "cython >= 3.0",
    "wheel >= 0.41",
    "numpy >= 1.26",
]

# CIBW_BEFORE_ALL_LINUX:
# CIBW_BEFORE_ALL_MACOSX:
# CIBW_BEFORE_ALL_WINDOWS:

[tool.cibuildwheel]
build = ["cp311-*", "cp312-*"]
archs = ["native"]

# install conan, create default profile, install dependencies
before-all = "pip install conan && conan profile detect && conan install --build=missing --output-folder={package} ."

#test-command = "pytest {package}/cortech"

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "manylinux_2_28"
skip = ["*musllinux*"]

# Additional args to pip
# - pass the meson_native file created by conan (setting things like compiler
#   etc.)
[tool.cibuildwheel.linux.config-settings]
# in the manylinux container, the project is located in /project, hence this
# is hardcoded here as the {package} placeholder does not seem to work at this
# stage.
# (see https://cibuildwheel.pypa.io/en/stable/faq/#linux-builds-in-containers)
setup-args = "--native-file=conan_meson_native.ini"

[tool.cibuildwheel.macos.config-settings]
setup-args = "--native-file=conan_meson_native.ini"


# [project.optional-dependencies]
# test =[
#     "pytest",
#     "mock"
# ]
# GUI =[
#     "pyqt5",
#     "pyopengl"
# ]
