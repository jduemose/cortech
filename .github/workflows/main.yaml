name: Build, Test, and Upload

on:
  push:
    branches: [ main ]
    tags:
      - v*
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest] #  macos-14, windows-latest
        # os: [ubuntu-latest, macos-14] #  macos-14, windows-latest

    if: ${{ startsWith(github.ref, 'refs/tags') || !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
    - uses: actions/checkout@v4

    - name: Python - set up ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Windows stuff
      run: |
        echo ${{github.workspace}}

        $escaped_workspace = ${{github.workspace}}.replace('\\', '\\\\')

        echo $escaped_workspace
        $escaped_workspace = $escaped_workspace\\conan_meson_native.ini

        echo $escaped_workspace

        echo "CIBW_CONFIG_SETTINGS=$escaped_workspace" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.21.3
      env:
        # Additional args to pip
        # CIBW_BUILD_FRONTEND: "pip; args: -v"

        # Pass the meson_native file created by conan (containing setting
        # things like compiler etc.) to pip
        # It seems that the {package} placeholder does not work at this stage,
        # hence I insert absolute path to the ini file in environment variables
        # instead.
        # On project macos and windows, the project (from checkout) is stored
        # github.workspace. On linux, we CIBW use the manylinux container.
        # Here the project is located in /project/
        # (see https://cibuildwheel.pypa.io/en/stable/faq/#linux-builds-in-containers)
        # CIBW_CONFIG_SETTINGS_LINUX: "setup-args=--native-file=/project/conan_meson_native.ini"
        # CIBW_CONFIG_SETTINGS_MACOS: "setup-args=--native-file=${{ github.workspace }}/conan_meson_native.ini"
        # CIBW_CONFIG_SETTINGS_WINDOWS: "setup-args=--native-file=${{ github.workspace }}
        CIBW_CONFIG_SETTINGS: ${{env.CIBW_CONFIG_SETTINGS}}

      with:
        output-dir: wheelhouse

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}
        path: ./wheelhouse/*.whl

  publish:
    name: Publish wheels on ${{ matrix.os }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest] #  macos-14, windows-latest

    permissions:
      contents: write
    # OS not important here
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Artifact - download
      uses: actions/download-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}
        path: ${{ github.workspace }}
    - name: Artifact - Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ github.workspace }}/*.whl
